

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat May 04 01:51:09 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	12F752
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.05
    21                           ; Generated 20/12/2018 GMT
    22                           ; 
    23                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC12F752 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0008                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000F                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  001C                     	;# 
    75  001C                     	;# 
    76  001D                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0088                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008F                     	;# 
    85  0090                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  009B                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  009E                     	;# 
    96  009F                     	;# 
    97  009F                     	;# 
    98  0105                     	;# 
    99  0108                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010F                     	;# 
   103  0110                     	;# 
   104  0111                     	;# 
   105  0112                     	;# 
   106  0113                     	;# 
   107  0114                     	;# 
   108  0115                     	;# 
   109  0116                     	;# 
   110  0185                     	;# 
   111  0188                     	;# 
   112  0189                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  018E                     	;# 
   116  018E                     	;# 
   117  018F                     	;# 
   118  0190                     	;# 
   119  0190                     	;# 
   120  0191                     	;# 
   121  0192                     	;# 
   122  0193                     	;# 
   123  0194                     	;# 
   124  0195                     	;# 
   125  0196                     	;# 
   126  0197                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0008                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000F                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  001C                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0088                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008F                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  009B                     	;# 
   162  009B                     	;# 
   163  009C                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  009F                     	;# 
   171  0105                     	;# 
   172  0108                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010F                     	;# 
   176  0110                     	;# 
   177  0111                     	;# 
   178  0112                     	;# 
   179  0113                     	;# 
   180  0114                     	;# 
   181  0115                     	;# 
   182  0116                     	;# 
   183  0185                     	;# 
   184  0188                     	;# 
   185  0189                     	;# 
   186  018C                     	;# 
   187  018D                     	;# 
   188  018E                     	;# 
   189  018E                     	;# 
   190  018F                     	;# 
   191  0190                     	;# 
   192  0190                     	;# 
   193  0191                     	;# 
   194  0192                     	;# 
   195  0193                     	;# 
   196  0194                     	;# 
   197  0195                     	;# 
   198  0196                     	;# 
   199  0197                     	;# 
   200                           
   201                           	psect	idataBANK0
   202  0106                     __pidataBANK0:	
   203                           
   204                           ;initializer for _freq
   205  0106  34A0               	retlw	160
   206  0107  340F               	retlw	15
   207  000C                     _PIR1bits	set	12
   208  000B                     _INTCON	set	11
   209  008C                     _PIE1	set	140
   210  0085                     _TRISA	set	133
   211  008F                     _OSCCONbits	set	143
   212  008F                     _OSCCON	set	143
   213  0105                     _LATAbits	set	261
   214  0112                     _T2CONbits	set	274
   215  0111                     _PR2	set	273
   216  0112                     _T2CON	set	274
   217  0105                     _LATA	set	261
   218  0185                     _ANSELA	set	389
   219                           
   220                           	psect	cinit
   221  000B                     start_initialization:	
   222                           ; #config settings
   223                           
   224  000B                     __initialization:	
   225                           
   226                           ; Initialize objects allocated to BANK0
   227  000B  2106               	fcall	__pidataBANK0	;fetch initializer
   228  000C  00C8               	movwf	__pdataBANK0& (0+127)
   229  000D  2107               	fcall	__pidataBANK0+1	;fetch initializer
   230  000E  00C9               	movwf	(__pdataBANK0+1)& (0+127)
   231  000F                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234  000F                     __end_of__initialization:	
   235  000F  0183               	clrf	3
   236  0010  2903               	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	dataBANK0
   239  0048                     __pdataBANK0:	
   240  0048                     _freq:	
   241  0048                     	ds	2
   242                           
   243                           	psect	cstackCOMMON
   244  0070                     __pcstackCOMMON:	
   245  0070                     ?_init_beeper:	
   246  0070                     ?_beeper_on:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?_init:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?_loop:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ?_main:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?_ISR:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ??_ISR:	
   262                           ; 1 bytes @ 0x0
   263                           
   264                           
   265                           ; 1 bytes @ 0x0
   266  0070                     	ds	2
   267  0072                     ??_init_beeper:	
   268  0072                     ??_beeper_on:	
   269                           ; 1 bytes @ 0x2
   270                           
   271  0072                     ?___aldiv:	
   272                           ; 1 bytes @ 0x2
   273                           
   274  0072                     ___aldiv@divisor:	
   275                           ; 4 bytes @ 0x2
   276                           
   277                           
   278                           ; 4 bytes @ 0x2
   279  0072                     	ds	1
   280  0073                     ??_init:	
   281                           
   282                           ; 1 bytes @ 0x3
   283  0073                     	ds	3
   284  0076                     ___aldiv@dividend:	
   285                           
   286                           ; 4 bytes @ 0x6
   287  0076                     	ds	4
   288  007A                     ??___aldiv:	
   289                           
   290                           ; 1 bytes @ 0xA
   291  007A                     	ds	1
   292  007B                     ??_beeper_set_freq_hz:	
   293  007B                     ??_loop:	
   294                           ; 1 bytes @ 0xB
   295                           
   296  007B                     ??_main:	
   297                           ; 1 bytes @ 0xB
   298                           
   299                           
   300                           	psect	cstackBANK0
   301  0040                     __pcstackBANK0:	
   302                           ; 1 bytes @ 0xB
   303                           
   304  0040                     ___aldiv@counter:	
   305                           
   306                           ; 1 bytes @ 0x0
   307  0040                     	ds	1
   308  0041                     ___aldiv@sign:	
   309                           
   310                           ; 1 bytes @ 0x1
   311  0041                     	ds	1
   312  0042                     ___aldiv@quotient:	
   313                           
   314                           ; 4 bytes @ 0x2
   315  0042                     	ds	4
   316  0046                     ?_beeper_set_freq_hz:	
   317  0046                     beeper_set_freq_hz@freq:	
   318                           ; 1 bytes @ 0x6
   319                           
   320                           
   321                           ; 2 bytes @ 0x6
   322  0046                     	ds	2
   323                           
   324                           	psect	maintext
   325  0103                     __pmaintext:	
   326 ;;
   327 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   328 ;;
   329 ;; *************** function _main *****************
   330 ;; Defined at:
   331 ;;		line 28 in file "main.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, status,2, status,0, pclath, cstack
   340 ;; Tracked objects:
   341 ;;		On entry : B00/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMMON   BANK0
   345 ;;      Params:         0       0
   346 ;;      Locals:         0       0
   347 ;;      Temps:          0       0
   348 ;;      Totals:         0       0
   349 ;;Total ram usage:        0 bytes
   350 ;; Hardware stack levels required when called:    4
   351 ;; This function calls:
   352 ;;		_init
   353 ;;		_loop
   354 ;; This function is called by:
   355 ;;		Startup code after reset
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           
   360                           ;psect for function _main
   361  0103                     _main:	
   362                           
   363                           ;main.c: 29:   init();
   364                           
   365                           ;incstack = 0
   366                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   367  0103  20EE               	fcall	_init
   368  0104                     l26:	
   369                           ;main.c: 30:   while(1) {
   370                           
   371                           
   372                           ;main.c: 31:     loop();
   373  0104  20F7               	fcall	_loop
   374  0105  2904               	goto	l26
   375  0106                     __end_of_main:	
   376                           
   377                           	psect	text1
   378  00F7                     __ptext1:	
   379 ;; *************** function _loop *****************
   380 ;; Defined at:
   381 ;;		line 23 in file "main.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, status,2, status,0, pclath, cstack
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMMON   BANK0
   395 ;;      Params:         0       0
   396 ;;      Locals:         0       0
   397 ;;      Temps:          0       0
   398 ;;      Totals:         0       0
   399 ;;Total ram usage:        0 bytes
   400 ;; Hardware stack levels used:    1
   401 ;; Hardware stack levels required when called:    3
   402 ;; This function calls:
   403 ;;		_beeper_set_freq_hz
   404 ;; This function is called by:
   405 ;;		_main
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           
   410                           ;psect for function _loop
   411  00F7                     _loop:	
   412                           
   413                           ;main.c: 25:   beeper_set_freq_hz(freq);
   414                           
   415                           ;incstack = 0
   416                           ; Regs used in _loop: [wreg+status,2+status,0+pclath+cstack]
   417  00F7  30A0               	movlw	160
   418  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   419  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   420  00FA  00C6               	movwf	beeper_set_freq_hz@freq
   421  00FB  300F               	movlw	15
   422  00FC  00C7               	movwf	beeper_set_freq_hz@freq+1
   423  00FD  20D5               	fcall	_beeper_set_freq_hz
   424  00FE  0008               	return
   425  00FF                     __end_of_loop:	
   426                           
   427                           	psect	text2
   428  00D5                     __ptext2:	
   429 ;; *************** function _beeper_set_freq_hz *****************
   430 ;; Defined at:
   431 ;;		line 25 in file "beeper.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;  freq            2    6[BANK0 ] int 
   434 ;; Auto vars:     Size  Location     Type
   435 ;;		None
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, status,2, status,0, pclath, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMMON   BANK0
   445 ;;      Params:         0       2
   446 ;;      Locals:         0       0
   447 ;;      Temps:          0       0
   448 ;;      Totals:         0       2
   449 ;;Total ram usage:        2 bytes
   450 ;; Hardware stack levels used:    1
   451 ;; Hardware stack levels required when called:    2
   452 ;; This function calls:
   453 ;;		___aldiv
   454 ;; This function is called by:
   455 ;;		_loop
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459                           
   460                           ;psect for function _beeper_set_freq_hz
   461  00D5                     _beeper_set_freq_hz:	
   462                           
   463                           ;beeper.c: 27:   PR2 = 2000000 / 2 / 4 / 16 / freq;
   464                           
   465                           ;incstack = 0
   466                           ; Regs used in _beeper_set_freq_hz: [wreg+status,2+status,0+pclath+cstack]
   467  00D5  1283               	bcf	3,5	;RP0=0, select bank0
   468  00D6  1303               	bcf	3,6	;RP1=0, select bank0
   469  00D7  0846               	movf	beeper_set_freq_hz@freq,w
   470  00D8  00F2               	movwf	___aldiv@divisor
   471  00D9  0847               	movf	beeper_set_freq_hz@freq+1,w
   472  00DA  00F3               	movwf	___aldiv@divisor+1
   473  00DB  3000               	movlw	0
   474  00DC  1BF3               	btfsc	___aldiv@divisor+1,7
   475  00DD  30FF               	movlw	255
   476  00DE  00F4               	movwf	___aldiv@divisor+2
   477  00DF  00F5               	movwf	___aldiv@divisor+3
   478  00E0  3000               	movlw	0
   479  00E1  00F9               	movwf	___aldiv@dividend+3
   480  00E2  3000               	movlw	0
   481  00E3  00F8               	movwf	___aldiv@dividend+2
   482  00E4  303D               	movlw	61
   483  00E5  00F7               	movwf	___aldiv@dividend+1
   484  00E6  3009               	movlw	9
   485  00E7  00F6               	movwf	___aldiv@dividend
   486  00E8  2011               	fcall	___aldiv
   487  00E9  0872               	movf	?___aldiv,w
   488  00EA  1283               	bcf	3,5	;RP0=0, select bank2
   489  00EB  1703               	bsf	3,6	;RP1=1, select bank2
   490  00EC  0091               	movwf	17	;volatile
   491  00ED  0008               	return
   492  00EE                     __end_of_beeper_set_freq_hz:	
   493                           
   494                           	psect	text3
   495  0011                     __ptext3:	
   496 ;; *************** function ___aldiv *****************
   497 ;; Defined at:
   498 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\aldiv.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;  divisor         4    2[COMMON] long 
   501 ;;  dividend        4    6[COMMON] long 
   502 ;; Auto vars:     Size  Location     Type
   503 ;;  quotient        4    2[BANK0 ] long 
   504 ;;  sign            1    1[BANK0 ] unsigned char 
   505 ;;  counter         1    0[BANK0 ] unsigned char 
   506 ;; Return value:  Size  Location     Type
   507 ;;                  4    2[COMMON] long 
   508 ;; Registers used:
   509 ;;		wreg, status,2, status,0
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMMON   BANK0
   515 ;;      Params:         8       0
   516 ;;      Locals:         0       6
   517 ;;      Temps:          1       0
   518 ;;      Totals:         9       6
   519 ;;Total ram usage:       15 bytes
   520 ;; Hardware stack levels used:    1
   521 ;; Hardware stack levels required when called:    1
   522 ;; This function calls:
   523 ;;		Nothing
   524 ;; This function is called by:
   525 ;;		_beeper_set_freq_hz
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           
   530                           ;psect for function ___aldiv
   531  0011                     ___aldiv:	
   532                           
   533                           ;incstack = 0
   534                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   535  0011  1283               	bcf	3,5	;RP0=0, select bank0
   536  0012  1303               	bcf	3,6	;RP1=0, select bank0
   537  0013  01C1               	clrf	___aldiv@sign
   538  0014  1FF5               	btfss	___aldiv@divisor+3,7
   539  0015  2823               	goto	l136
   540  0016  09F2               	comf	___aldiv@divisor,f
   541  0017  09F3               	comf	___aldiv@divisor+1,f
   542  0018  09F4               	comf	___aldiv@divisor+2,f
   543  0019  09F5               	comf	___aldiv@divisor+3,f
   544  001A  0AF2               	incf	___aldiv@divisor,f
   545  001B  1903               	skipnz
   546  001C  0AF3               	incf	___aldiv@divisor+1,f
   547  001D  1903               	skipnz
   548  001E  0AF4               	incf	___aldiv@divisor+2,f
   549  001F  1903               	skipnz
   550  0020  0AF5               	incf	___aldiv@divisor+3,f
   551  0021  01C1               	clrf	___aldiv@sign
   552  0022  0AC1               	incf	___aldiv@sign,f
   553  0023                     l136:	
   554  0023  1FF9               	btfss	___aldiv@dividend+3,7
   555  0024  2834               	goto	l659
   556  0025  09F6               	comf	___aldiv@dividend,f
   557  0026  09F7               	comf	___aldiv@dividend+1,f
   558  0027  09F8               	comf	___aldiv@dividend+2,f
   559  0028  09F9               	comf	___aldiv@dividend+3,f
   560  0029  0AF6               	incf	___aldiv@dividend,f
   561  002A  1903               	skipnz
   562  002B  0AF7               	incf	___aldiv@dividend+1,f
   563  002C  1903               	skipnz
   564  002D  0AF8               	incf	___aldiv@dividend+2,f
   565  002E  1903               	skipnz
   566  002F  0AF9               	incf	___aldiv@dividend+3,f
   567  0030  3001               	movlw	1
   568  0031  00FA               	movwf	??___aldiv
   569  0032  087A               	movf	??___aldiv,w
   570  0033  06C1               	xorwf	___aldiv@sign,f
   571  0034                     l659:	
   572  0034  3000               	movlw	0
   573  0035  00C5               	movwf	___aldiv@quotient+3
   574  0036  3000               	movlw	0
   575  0037  00C4               	movwf	___aldiv@quotient+2
   576  0038  3000               	movlw	0
   577  0039  00C3               	movwf	___aldiv@quotient+1
   578  003A  3000               	movlw	0
   579  003B  00C2               	movwf	___aldiv@quotient
   580  003C  0875               	movf	___aldiv@divisor+3,w
   581  003D  0474               	iorwf	___aldiv@divisor+2,w
   582  003E  0473               	iorwf	___aldiv@divisor+1,w
   583  003F  0472               	iorwf	___aldiv@divisor,w
   584  0040  1903               	skipnz
   585  0041  2889               	goto	l681
   586  0042  01C0               	clrf	___aldiv@counter
   587  0043  0AC0               	incf	___aldiv@counter,f
   588  0044                     l667:	
   589  0044  1BF5               	btfsc	___aldiv@divisor+3,7
   590  0045  2854               	goto	l669
   591  0046  3001               	movlw	1
   592  0047  00FA               	movwf	??___aldiv
   593  0048                     u185:	
   594  0048  1003               	clrc
   595  0049  0DF2               	rlf	___aldiv@divisor,f
   596  004A  0DF3               	rlf	___aldiv@divisor+1,f
   597  004B  0DF4               	rlf	___aldiv@divisor+2,f
   598  004C  0DF5               	rlf	___aldiv@divisor+3,f
   599  004D  0BFA               	decfsz	??___aldiv,f
   600  004E  2848               	goto	u185
   601  004F  3001               	movlw	1
   602  0050  00FA               	movwf	??___aldiv
   603  0051  087A               	movf	??___aldiv,w
   604  0052  07C0               	addwf	___aldiv@counter,f
   605  0053  2844               	goto	l667
   606  0054                     l669:	
   607  0054  3001               	movlw	1
   608  0055  00FA               	movwf	??___aldiv
   609  0056                     u205:	
   610  0056  1003               	clrc
   611  0057  0DC2               	rlf	___aldiv@quotient,f
   612  0058  0DC3               	rlf	___aldiv@quotient+1,f
   613  0059  0DC4               	rlf	___aldiv@quotient+2,f
   614  005A  0DC5               	rlf	___aldiv@quotient+3,f
   615  005B  0BFA               	decfsz	??___aldiv,f
   616  005C  2856               	goto	u205
   617  005D  0875               	movf	___aldiv@divisor+3,w
   618  005E  0279               	subwf	___aldiv@dividend+3,w
   619  005F  1D03               	skipz
   620  0060  286B               	goto	u215
   621  0061  0874               	movf	___aldiv@divisor+2,w
   622  0062  0278               	subwf	___aldiv@dividend+2,w
   623  0063  1D03               	skipz
   624  0064  286B               	goto	u215
   625  0065  0873               	movf	___aldiv@divisor+1,w
   626  0066  0277               	subwf	___aldiv@dividend+1,w
   627  0067  1D03               	skipz
   628  0068  286B               	goto	u215
   629  0069  0872               	movf	___aldiv@divisor,w
   630  006A  0276               	subwf	___aldiv@dividend,w
   631  006B                     u215:	
   632  006B  1C03               	skipc
   633  006C  287C               	goto	l677
   634  006D  0872               	movf	___aldiv@divisor,w
   635  006E  02F6               	subwf	___aldiv@dividend,f
   636  006F  0873               	movf	___aldiv@divisor+1,w
   637  0070  1C03               	skipc
   638  0071  0F73               	incfsz	___aldiv@divisor+1,w
   639  0072  02F7               	subwf	___aldiv@dividend+1,f
   640  0073  0874               	movf	___aldiv@divisor+2,w
   641  0074  1C03               	skipc
   642  0075  0F74               	incfsz	___aldiv@divisor+2,w
   643  0076  02F8               	subwf	___aldiv@dividend+2,f
   644  0077  0875               	movf	___aldiv@divisor+3,w
   645  0078  1C03               	skipc
   646  0079  0F75               	incfsz	___aldiv@divisor+3,w
   647  007A  02F9               	subwf	___aldiv@dividend+3,f
   648  007B  1442               	bsf	___aldiv@quotient,0
   649  007C                     l677:	
   650  007C  3001               	movlw	1
   651  007D                     u225:	
   652  007D  1003               	clrc
   653  007E  0CF5               	rrf	___aldiv@divisor+3,f
   654  007F  0CF4               	rrf	___aldiv@divisor+2,f
   655  0080  0CF3               	rrf	___aldiv@divisor+1,f
   656  0081  0CF2               	rrf	___aldiv@divisor,f
   657  0082  3EFF               	addlw	-1
   658  0083  1D03               	skipz
   659  0084  287D               	goto	u225
   660  0085  3001               	movlw	1
   661  0086  02C0               	subwf	___aldiv@counter,f
   662  0087  1D03               	btfss	3,2
   663  0088  2854               	goto	l669
   664  0089                     l681:	
   665  0089  0841               	movf	___aldiv@sign,w
   666  008A  1903               	btfsc	3,2
   667  008B  2897               	goto	l685
   668  008C  09C2               	comf	___aldiv@quotient,f
   669  008D  09C3               	comf	___aldiv@quotient+1,f
   670  008E  09C4               	comf	___aldiv@quotient+2,f
   671  008F  09C5               	comf	___aldiv@quotient+3,f
   672  0090  0AC2               	incf	___aldiv@quotient,f
   673  0091  1903               	skipnz
   674  0092  0AC3               	incf	___aldiv@quotient+1,f
   675  0093  1903               	skipnz
   676  0094  0AC4               	incf	___aldiv@quotient+2,f
   677  0095  1903               	skipnz
   678  0096  0AC5               	incf	___aldiv@quotient+3,f
   679  0097                     l685:	
   680  0097  0845               	movf	___aldiv@quotient+3,w
   681  0098  00F5               	movwf	?___aldiv+3
   682  0099  0844               	movf	___aldiv@quotient+2,w
   683  009A  00F4               	movwf	?___aldiv+2
   684  009B  0843               	movf	___aldiv@quotient+1,w
   685  009C  00F3               	movwf	?___aldiv+1
   686  009D  0842               	movf	___aldiv@quotient,w
   687  009E  00F2               	movwf	?___aldiv
   688  009F  0008               	return
   689  00A0                     __end_of___aldiv:	
   690                           
   691                           	psect	text4
   692  00EE                     __ptext4:	
   693 ;; *************** function _init *****************
   694 ;; Defined at:
   695 ;;		line 14 in file "main.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;		None
   698 ;; Auto vars:     Size  Location     Type
   699 ;;		None
   700 ;; Return value:  Size  Location     Type
   701 ;;                  1    wreg      void 
   702 ;; Registers used:
   703 ;;		wreg, status,2, status,0, pclath, cstack
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMMON   BANK0
   709 ;;      Params:         0       0
   710 ;;      Locals:         0       0
   711 ;;      Temps:          0       0
   712 ;;      Totals:         0       0
   713 ;;Total ram usage:        0 bytes
   714 ;; Hardware stack levels used:    1
   715 ;; Hardware stack levels required when called:    2
   716 ;; This function calls:
   717 ;;		_beeper_on
   718 ;;		_init_beeper
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           
   725                           ;psect for function _init
   726  00EE                     _init:	
   727                           
   728                           ;main.c: 16:   OSCCON = 0b00110000;
   729                           
   730                           ;incstack = 0
   731                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   732  00EE  3030               	movlw	48
   733  00EF  1683               	bsf	3,5	;RP0=1, select bank1
   734  00F0  1303               	bcf	3,6	;RP1=0, select bank1
   735  00F1  008F               	movwf	15	;volatile
   736  00F2                     l15:	
   737                           ;main.c: 17:   while (!OSCCONbits.HTS) {}
   738                           
   739  00F2  1D0F               	btfss	15,2	;volatile
   740  00F3  28F2               	goto	l15
   741                           
   742                           ;main.c: 19:   init_beeper();
   743  00F4  20A0               	fcall	_init_beeper
   744                           
   745                           ;main.c: 20:   beeper_on();
   746  00F5  20FF               	fcall	_beeper_on
   747  00F6  0008               	return
   748  00F7                     __end_of_init:	
   749                           
   750                           	psect	text5
   751  00A0                     __ptext5:	
   752 ;; *************** function _init_beeper *****************
   753 ;; Defined at:
   754 ;;		line 7 in file "beeper.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg, status,2, status,0
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0
   768 ;;      Params:         0       0
   769 ;;      Locals:         0       0
   770 ;;      Temps:          1       0
   771 ;;      Totals:         1       0
   772 ;;Total ram usage:        1 bytes
   773 ;; Hardware stack levels used:    1
   774 ;; Hardware stack levels required when called:    1
   775 ;; This function calls:
   776 ;;		Nothing
   777 ;; This function is called by:
   778 ;;		_init
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function _init_beeper
   784  00A0                     _init_beeper:	
   785                           
   786                           ;beeper.c: 9:   ANSELA &= ~(0b1 << 2);
   787                           
   788                           ;incstack = 0
   789                           ; Regs used in _init_beeper: [wreg+status,2+status,0]
   790  00A0  30FB               	movlw	251
   791  00A1  00F2               	movwf	??_init_beeper
   792  00A2  0872               	movf	??_init_beeper,w
   793  00A3  1683               	bsf	3,5	;RP0=1, select bank3
   794  00A4  1703               	bsf	3,6	;RP1=1, select bank3
   795  00A5  0585               	andwf	5,f	;volatile
   796                           
   797                           ;beeper.c: 10:   TRISA &= ~(0b1 << 2);
   798  00A6  30FB               	movlw	251
   799  00A7  00F2               	movwf	??_init_beeper
   800  00A8  0872               	movf	??_init_beeper,w
   801  00A9  1683               	bsf	3,5	;RP0=1, select bank1
   802  00AA  1303               	bcf	3,6	;RP1=0, select bank1
   803  00AB  0585               	andwf	5,f	;volatile
   804                           
   805                           ;beeper.c: 11:   LATA |= (0b1 << 2);
   806  00AC  1283               	bcf	3,5	;RP0=0, select bank2
   807  00AD  1703               	bsf	3,6	;RP1=1, select bank2
   808  00AE  1505               	bsf	5,2	;volatile
   809                           
   810                           ;beeper.c: 17:   T2CON = 0b01111011;
   811  00AF  307B               	movlw	123
   812  00B0  0092               	movwf	18	;volatile
   813                           
   814                           ;beeper.c: 18:   PR2 = 2;
   815  00B1  3002               	movlw	2
   816  00B2  0091               	movwf	17	;volatile
   817                           
   818                           ;beeper.c: 21:   INTCON |= (0b11 << 6);
   819  00B3  30C0               	movlw	192
   820  00B4  00F2               	movwf	??_init_beeper
   821  00B5  0872               	movf	??_init_beeper,w
   822  00B6  048B               	iorwf	11,f	;volatile
   823                           
   824                           ;beeper.c: 22:   PIE1 |= (0b1 << 1);
   825  00B7  1683               	bsf	3,5	;RP0=1, select bank1
   826  00B8  1303               	bcf	3,6	;RP1=0, select bank1
   827  00B9  148C               	bsf	12,1	;volatile
   828  00BA  0008               	return
   829  00BB                     __end_of_init_beeper:	
   830                           
   831                           	psect	text6
   832  00FF                     __ptext6:	
   833 ;; *************** function _beeper_on *****************
   834 ;; Defined at:
   835 ;;		line 30 in file "beeper.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		None
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0
   849 ;;      Params:         0       0
   850 ;;      Locals:         0       0
   851 ;;      Temps:          0       0
   852 ;;      Totals:         0       0
   853 ;;Total ram usage:        0 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; Hardware stack levels required when called:    1
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_init
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           
   864                           ;psect for function _beeper_on
   865  00FF                     _beeper_on:	
   866                           
   867                           ;beeper.c: 31:   T2CONbits.TMR2ON = 1;
   868                           
   869                           ;incstack = 0
   870                           ; Regs used in _beeper_on: []
   871  00FF  1283               	bcf	3,5	;RP0=0, select bank2
   872  0100  1703               	bsf	3,6	;RP1=1, select bank2
   873  0101  1512               	bsf	18,2	;volatile
   874  0102  0008               	return
   875  0103                     __end_of_beeper_on:	
   876                           
   877                           	psect	text7
   878  00BB                     __ptext7:	
   879 ;; *************** function _ISR *****************
   880 ;; Defined at:
   881 ;;		line 38 in file "beeper.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		status,0
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0
   895 ;;      Params:         0       0
   896 ;;      Locals:         0       0
   897 ;;      Temps:          2       0
   898 ;;      Totals:         2       0
   899 ;;Total ram usage:        2 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		Interrupt level 1
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           
   909                           ;psect for function _ISR
   910  00BB                     _ISR:	
   911                           
   912                           ;beeper.c: 39:   if (PIR1bits.TMR2IF) {
   913  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   914  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   915  00BD  1C8C               	btfss	12,1	;volatile
   916  00BE  28CE               	goto	i1l67
   917                           
   918                           ;beeper.c: 41:     PIR1bits.TMR2IF = 0;
   919  00BF  108C               	bcf	12,1	;volatile
   920                           
   921                           ;beeper.c: 42:     LATAbits.LATA2 = ~LATAbits.LATA2;
   922  00C0  1003               	clrc
   923  00C1  1283               	bcf	3,5	;RP0=0, select bank2
   924  00C2  1703               	bsf	3,6	;RP1=1, select bank2
   925  00C3  1D05               	btfss	5,2	;volatile
   926  00C4  1403               	setc
   927  00C5  1C03               	btfss	3,0
   928  00C6  28CB               	goto	u13_20
   929  00C7  1283               	bcf	3,5	;RP0=0, select bank2
   930  00C8  1703               	bsf	3,6	;RP1=1, select bank2
   931  00C9  1505               	bsf	5,2	;volatile
   932  00CA  28CE               	goto	i1l67
   933  00CB                     u13_20:	
   934  00CB  1283               	bcf	3,5	;RP0=0, select bank2
   935  00CC  1703               	bsf	3,6	;RP1=1, select bank2
   936  00CD  1105               	bcf	5,2	;volatile
   937  00CE                     i1l67:	
   938  00CE  0871               	movf	??_ISR+1,w
   939  00CF  008A               	movwf	10
   940  00D0  0E70               	swapf	??_ISR^(0+4294967168),w
   941  00D1  0083               	movwf	3
   942  00D2  0EFE               	swapf	126,f
   943  00D3  0E7E               	swapf	126,w
   944  00D4  0009               	retfie
   945  00D5                     __end_of_ISR:	
   946  007E                     btemp	set	126	;btemp
   947  007E                     wtemp0	set	126
   948                           
   949                           	psect	intentry
   950  0004                     __pintentry:	
   951                           ;incstack = 0
   952                           ; Regs used in _ISR: [status,0]
   953                           
   954  0004                     interrupt_function:	
   955  007E                     saved_w	set	btemp
   956  0004  00FE               	movwf	btemp
   957  0005  0E03               	swapf	3,w
   958  0006  00F0               	movwf	??_ISR
   959  0007  080A               	movf	10,w
   960  0008  00F1               	movwf	??_ISR+1
   961  0009  28BB               	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            48      8      10

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _beeper_set_freq_hz->___aldiv
    _init->_init_beeper

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _loop->_beeper_set_freq_hz
    _beeper_set_freq_hz->___aldiv

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     550
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0     550
                 _beeper_set_freq_hz
 ---------------------------------------------------------------------------------
 (2) _beeper_set_freq_hz                                   2     0      2     550
                                              6 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     452
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                          _beeper_on
                        _init_beeper
 ---------------------------------------------------------------------------------
 (2) _init_beeper                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _beeper_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _beeper_on
     _init_beeper
   _loop
     _beeper_set_freq_hz
       ___aldiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               30      8       A       6       20.8%
BITBANK0            30      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      15       4        0.0%
ABS                  0      0      15       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat May 04 01:51:09 2019

                         l15 00F2                           l26 0104                          l136 0023  
                        l681 0089                          l667 0044                          l659 0034  
                        l685 0097                          l677 007C                          l669 0054  
                        u205 0056                          u215 006B                          u225 007D  
                        _PR2 0111                          u185 0048                          _ISR 00BB  
                       ?_ISR 0070                         _LATA 0105                         _PIE1 008C  
                       i1l67 00CE                         _main 0103                         _freq 0048  
                       _init 00EE                         _loop 00F7                         btemp 007E  
                       start 000A                        ??_ISR 0070              __end_of___aldiv 00A0  
                      ?_main 0070                        ?_init 0070                 ?_init_beeper 0070  
                      ?_loop 0070                        _T2CON 0112                        u13_20 00CB  
                      _TRISA 0085                        pclath 000A                        status 0003  
                      wtemp0 007E              __initialization 000B                 __end_of_main 0106  
               __end_of_init 00F7                 __end_of_loop 00FF                       ??_main 007B  
                     ??_init 0073                       ??_loop 007B                       _ANSELA 0185  
                     _INTCON 000B                       _OSCCON 008F  __size_of_beeper_set_freq_hz 0019  
                  ??___aldiv 007A                       saved_w 007E       beeper_set_freq_hz@freq 0046  
    __end_of__initialization 000F               __pcstackCOMMON 0070                 __pidataBANK0 0106  
         __size_of_beeper_on 0004         __size_of_init_beeper 001B                   __pmaintext 0103  
                 __pintentry 0004            __end_of_beeper_on 0103                      ___aldiv 0011  
                    __ptext1 00F7                      __ptext2 00D5                      __ptext3 0011  
                    __ptext4 00EE                      __ptext5 00A0                      __ptext6 00FF  
                    __ptext7 00BB                 __size_of_ISR 001A                    _T2CONbits 0112  
           ___aldiv@dividend 0076         end_of_initialization 000F             ___aldiv@quotient 0042  
 __end_of_beeper_set_freq_hz 00EE          start_initialization 000B                  __end_of_ISR 00D5  
                __pdataBANK0 0048                ??_init_beeper 0072                    ___latbits 0000  
              __pcstackBANK0 0040                    _beeper_on 00FF                     ?___aldiv 0072  
        __end_of_init_beeper 00BB              ___aldiv@divisor 0072            interrupt_function 0004  
            ___aldiv@counter 0040                   ?_beeper_on 0070                     _LATAbits 0105  
                   _PIR1bits 000C             __size_of___aldiv 008F           _beeper_set_freq_hz 00D5  
                _init_beeper 00A0          ?_beeper_set_freq_hz 0046                  ??_beeper_on 0072  
              __size_of_main 0003                __size_of_init 0009                __size_of_loop 0008  
       ??_beeper_set_freq_hz 007B                     intlevel1 0000                   _OSCCONbits 008F  
               ___aldiv@sign 0041  
