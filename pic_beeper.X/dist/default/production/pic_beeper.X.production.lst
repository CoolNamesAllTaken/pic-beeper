

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat May 04 02:35:28 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	12F752
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.05
    21                           ; Generated 20/12/2018 GMT
    22                           ; 
    23                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC12F752 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0008                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000F                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  001C                     	;# 
    75  001C                     	;# 
    76  001D                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0088                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008F                     	;# 
    85  0090                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  009B                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  009E                     	;# 
    96  009F                     	;# 
    97  009F                     	;# 
    98  0105                     	;# 
    99  0108                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010F                     	;# 
   103  0110                     	;# 
   104  0111                     	;# 
   105  0112                     	;# 
   106  0113                     	;# 
   107  0114                     	;# 
   108  0115                     	;# 
   109  0116                     	;# 
   110  0185                     	;# 
   111  0188                     	;# 
   112  0189                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  018E                     	;# 
   116  018E                     	;# 
   117  018F                     	;# 
   118  0190                     	;# 
   119  0190                     	;# 
   120  0191                     	;# 
   121  0192                     	;# 
   122  0193                     	;# 
   123  0194                     	;# 
   124  0195                     	;# 
   125  0196                     	;# 
   126  0197                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0008                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000F                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  001C                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0088                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008F                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  009B                     	;# 
   162  009B                     	;# 
   163  009C                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  009F                     	;# 
   171  0105                     	;# 
   172  0108                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010F                     	;# 
   176  0110                     	;# 
   177  0111                     	;# 
   178  0112                     	;# 
   179  0113                     	;# 
   180  0114                     	;# 
   181  0115                     	;# 
   182  0116                     	;# 
   183  0185                     	;# 
   184  0188                     	;# 
   185  0189                     	;# 
   186  018C                     	;# 
   187  018D                     	;# 
   188  018E                     	;# 
   189  018E                     	;# 
   190  018F                     	;# 
   191  0190                     	;# 
   192  0190                     	;# 
   193  0191                     	;# 
   194  0192                     	;# 
   195  0193                     	;# 
   196  0194                     	;# 
   197  0195                     	;# 
   198  0196                     	;# 
   199  0197                     	;# 
   200                           
   201                           	psect	idataBANK0
   202  010B                     __pidataBANK0:	
   203                           
   204                           ;initializer for _freq
   205  010B  3440               	retlw	64
   206  010C  341F               	retlw	31
   207  000C                     _PIR1bits	set	12
   208  000B                     _INTCON	set	11
   209  0011                     _T1CON	set	17
   210  008C                     _PIE1	set	140
   211  0085                     _TRISA	set	133
   212  008F                     _OSCCONbits	set	143
   213  008F                     _OSCCON	set	143
   214  0105                     _LATAbits	set	261
   215  0112                     _T2CONbits	set	274
   216  0111                     _PR2	set	273
   217  0112                     _T2CON	set	274
   218  0105                     _LATA	set	261
   219  0185                     _ANSELA	set	389
   220                           
   221                           	psect	cinit
   222  000B                     start_initialization:	
   223                           ; #config settings
   224                           
   225  000B                     __initialization:	
   226                           
   227                           ; Initialize objects allocated to BANK0
   228  000B  210B               	fcall	__pidataBANK0	;fetch initializer
   229  000C  00C8               	movwf	__pdataBANK0& (0+127)
   230  000D  210C               	fcall	__pidataBANK0+1	;fetch initializer
   231  000E  00C9               	movwf	(__pdataBANK0+1)& (0+127)
   232  000F                     end_of_initialization:	
   233                           ;End of C runtime variable initialization code
   234                           
   235  000F                     __end_of__initialization:	
   236  000F  0183               	clrf	3
   237  0010  2908               	ljmp	_main	;jump to C main() function
   238                           
   239                           	psect	dataBANK0
   240  0048                     __pdataBANK0:	
   241  0048                     _freq:	
   242  0048                     	ds	2
   243                           
   244                           	psect	cstackCOMMON
   245  0070                     __pcstackCOMMON:	
   246  0070                     ?_init_beeper:	
   247  0070                     ?_beeper_on:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ?_init:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_loop:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ?_main:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_ISR:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ??_ISR:	
   263                           ; 1 bytes @ 0x0
   264                           
   265                           
   266                           ; 1 bytes @ 0x0
   267  0070                     	ds	2
   268  0072                     ??_init_beeper:	
   269  0072                     ??_beeper_on:	
   270                           ; 1 bytes @ 0x2
   271                           
   272  0072                     ?___aldiv:	
   273                           ; 1 bytes @ 0x2
   274                           
   275  0072                     ___aldiv@divisor:	
   276                           ; 4 bytes @ 0x2
   277                           
   278                           
   279                           ; 4 bytes @ 0x2
   280  0072                     	ds	1
   281  0073                     ??_init:	
   282                           
   283                           ; 1 bytes @ 0x3
   284  0073                     	ds	3
   285  0076                     ___aldiv@dividend:	
   286                           
   287                           ; 4 bytes @ 0x6
   288  0076                     	ds	4
   289  007A                     ??___aldiv:	
   290                           
   291                           ; 1 bytes @ 0xA
   292  007A                     	ds	1
   293  007B                     ??_beeper_set_freq_hz:	
   294  007B                     ??_loop:	
   295                           ; 1 bytes @ 0xB
   296                           
   297  007B                     ??_main:	
   298                           ; 1 bytes @ 0xB
   299                           
   300                           
   301                           	psect	cstackBANK0
   302  0040                     __pcstackBANK0:	
   303                           ; 1 bytes @ 0xB
   304                           
   305  0040                     ___aldiv@counter:	
   306                           
   307                           ; 1 bytes @ 0x0
   308  0040                     	ds	1
   309  0041                     ___aldiv@sign:	
   310                           
   311                           ; 1 bytes @ 0x1
   312  0041                     	ds	1
   313  0042                     ___aldiv@quotient:	
   314                           
   315                           ; 4 bytes @ 0x2
   316  0042                     	ds	4
   317  0046                     ?_beeper_set_freq_hz:	
   318  0046                     beeper_set_freq_hz@freq:	
   319                           ; 1 bytes @ 0x6
   320                           
   321                           
   322                           ; 2 bytes @ 0x6
   323  0046                     	ds	2
   324                           
   325                           	psect	maintext
   326  0108                     __pmaintext:	
   327 ;;
   328 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   329 ;;
   330 ;; *************** function _main *****************
   331 ;; Defined at:
   332 ;;		line 28 in file "main.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;		None
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, status,2, status,0, pclath, cstack
   341 ;; Tracked objects:
   342 ;;		On entry : B00/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMMON   BANK0
   346 ;;      Params:         0       0
   347 ;;      Locals:         0       0
   348 ;;      Temps:          0       0
   349 ;;      Totals:         0       0
   350 ;;Total ram usage:        0 bytes
   351 ;; Hardware stack levels required when called:    4
   352 ;; This function calls:
   353 ;;		_init
   354 ;;		_loop
   355 ;; This function is called by:
   356 ;;		Startup code after reset
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           
   361                           ;psect for function _main
   362  0108                     _main:	
   363                           
   364                           ;main.c: 29:   init();
   365                           
   366                           ;incstack = 0
   367                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   368  0108  20F3               	fcall	_init
   369  0109                     l26:	
   370                           ;main.c: 30:   while(1) {
   371                           
   372                           
   373                           ;main.c: 31:     loop();
   374  0109  20FC               	fcall	_loop
   375  010A  2909               	goto	l26
   376  010B                     __end_of_main:	
   377                           
   378                           	psect	text1
   379  00FC                     __ptext1:	
   380 ;; *************** function _loop *****************
   381 ;; Defined at:
   382 ;;		line 23 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, status,2, status,0, pclath, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMMON   BANK0
   396 ;;      Params:         0       0
   397 ;;      Locals:         0       0
   398 ;;      Temps:          0       0
   399 ;;      Totals:         0       0
   400 ;;Total ram usage:        0 bytes
   401 ;; Hardware stack levels used:    1
   402 ;; Hardware stack levels required when called:    3
   403 ;; This function calls:
   404 ;;		_beeper_set_freq_hz
   405 ;; This function is called by:
   406 ;;		_main
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410                           
   411                           ;psect for function _loop
   412  00FC                     _loop:	
   413                           
   414                           ;main.c: 25:   beeper_set_freq_hz(freq);
   415                           
   416                           ;incstack = 0
   417                           ; Regs used in _loop: [wreg+status,2+status,0+pclath+cstack]
   418  00FC  3040               	movlw	64
   419  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   420  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   421  00FF  00C6               	movwf	beeper_set_freq_hz@freq
   422  0100  301F               	movlw	31
   423  0101  00C7               	movwf	beeper_set_freq_hz@freq+1
   424  0102  20BF               	fcall	_beeper_set_freq_hz
   425  0103  0008               	return
   426  0104                     __end_of_loop:	
   427                           
   428                           	psect	text2
   429  00BF                     __ptext2:	
   430 ;; *************** function _beeper_set_freq_hz *****************
   431 ;; Defined at:
   432 ;;		line 27 in file "beeper.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;  freq            2    6[BANK0 ] int 
   435 ;; Auto vars:     Size  Location     Type
   436 ;;		None
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, status,2, status,0, pclath, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : 0/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMMON   BANK0
   446 ;;      Params:         0       2
   447 ;;      Locals:         0       0
   448 ;;      Temps:          0       0
   449 ;;      Totals:         0       2
   450 ;;Total ram usage:        2 bytes
   451 ;; Hardware stack levels used:    1
   452 ;; Hardware stack levels required when called:    2
   453 ;; This function calls:
   454 ;;		___aldiv
   455 ;; This function is called by:
   456 ;;		_loop
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           
   461                           ;psect for function _beeper_set_freq_hz
   462  00BF                     _beeper_set_freq_hz:	
   463                           
   464                           ;beeper.c: 29:   PR2 = (2000000 / 2 / 4 / 4 / freq) - 2;
   465                           
   466                           ;incstack = 0
   467                           ; Regs used in _beeper_set_freq_hz: [wreg+status,2+status,0+pclath+cstack]
   468  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   469  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   470  00C1  0846               	movf	beeper_set_freq_hz@freq,w
   471  00C2  00F2               	movwf	___aldiv@divisor
   472  00C3  0847               	movf	beeper_set_freq_hz@freq+1,w
   473  00C4  00F3               	movwf	___aldiv@divisor+1
   474  00C5  3000               	movlw	0
   475  00C6  1BF3               	btfsc	___aldiv@divisor+1,7
   476  00C7  30FF               	movlw	255
   477  00C8  00F4               	movwf	___aldiv@divisor+2
   478  00C9  00F5               	movwf	___aldiv@divisor+3
   479  00CA  3000               	movlw	0
   480  00CB  00F9               	movwf	___aldiv@dividend+3
   481  00CC  3000               	movlw	0
   482  00CD  00F8               	movwf	___aldiv@dividend+2
   483  00CE  30F4               	movlw	244
   484  00CF  00F7               	movwf	___aldiv@dividend+1
   485  00D0  3024               	movlw	36
   486  00D1  00F6               	movwf	___aldiv@dividend
   487  00D2  2011               	fcall	___aldiv
   488  00D3  0872               	movf	?___aldiv,w
   489  00D4  3EFE               	addlw	254
   490  00D5  1283               	bcf	3,5	;RP0=0, select bank2
   491  00D6  1703               	bsf	3,6	;RP1=1, select bank2
   492  00D7  0091               	movwf	17	;volatile
   493  00D8  0008               	return
   494  00D9                     __end_of_beeper_set_freq_hz:	
   495                           
   496                           	psect	text3
   497  0011                     __ptext3:	
   498 ;; *************** function ___aldiv *****************
   499 ;; Defined at:
   500 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\aldiv.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;  divisor         4    2[COMMON] long 
   503 ;;  dividend        4    6[COMMON] long 
   504 ;; Auto vars:     Size  Location     Type
   505 ;;  quotient        4    2[BANK0 ] long 
   506 ;;  sign            1    1[BANK0 ] unsigned char 
   507 ;;  counter         1    0[BANK0 ] unsigned char 
   508 ;; Return value:  Size  Location     Type
   509 ;;                  4    2[COMMON] long 
   510 ;; Registers used:
   511 ;;		wreg, status,2, status,0
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMMON   BANK0
   517 ;;      Params:         8       0
   518 ;;      Locals:         0       6
   519 ;;      Temps:          1       0
   520 ;;      Totals:         9       6
   521 ;;Total ram usage:       15 bytes
   522 ;; Hardware stack levels used:    1
   523 ;; Hardware stack levels required when called:    1
   524 ;; This function calls:
   525 ;;		Nothing
   526 ;; This function is called by:
   527 ;;		_beeper_set_freq_hz
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           
   532                           ;psect for function ___aldiv
   533  0011                     ___aldiv:	
   534                           
   535                           ;incstack = 0
   536                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   537  0011  1283               	bcf	3,5	;RP0=0, select bank0
   538  0012  1303               	bcf	3,6	;RP1=0, select bank0
   539  0013  01C1               	clrf	___aldiv@sign
   540  0014  1FF5               	btfss	___aldiv@divisor+3,7
   541  0015  2823               	goto	l138
   542  0016  09F2               	comf	___aldiv@divisor,f
   543  0017  09F3               	comf	___aldiv@divisor+1,f
   544  0018  09F4               	comf	___aldiv@divisor+2,f
   545  0019  09F5               	comf	___aldiv@divisor+3,f
   546  001A  0AF2               	incf	___aldiv@divisor,f
   547  001B  1903               	skipnz
   548  001C  0AF3               	incf	___aldiv@divisor+1,f
   549  001D  1903               	skipnz
   550  001E  0AF4               	incf	___aldiv@divisor+2,f
   551  001F  1903               	skipnz
   552  0020  0AF5               	incf	___aldiv@divisor+3,f
   553  0021  01C1               	clrf	___aldiv@sign
   554  0022  0AC1               	incf	___aldiv@sign,f
   555  0023                     l138:	
   556  0023  1FF9               	btfss	___aldiv@dividend+3,7
   557  0024  2834               	goto	l663
   558  0025  09F6               	comf	___aldiv@dividend,f
   559  0026  09F7               	comf	___aldiv@dividend+1,f
   560  0027  09F8               	comf	___aldiv@dividend+2,f
   561  0028  09F9               	comf	___aldiv@dividend+3,f
   562  0029  0AF6               	incf	___aldiv@dividend,f
   563  002A  1903               	skipnz
   564  002B  0AF7               	incf	___aldiv@dividend+1,f
   565  002C  1903               	skipnz
   566  002D  0AF8               	incf	___aldiv@dividend+2,f
   567  002E  1903               	skipnz
   568  002F  0AF9               	incf	___aldiv@dividend+3,f
   569  0030  3001               	movlw	1
   570  0031  00FA               	movwf	??___aldiv
   571  0032  087A               	movf	??___aldiv,w
   572  0033  06C1               	xorwf	___aldiv@sign,f
   573  0034                     l663:	
   574  0034  3000               	movlw	0
   575  0035  00C5               	movwf	___aldiv@quotient+3
   576  0036  3000               	movlw	0
   577  0037  00C4               	movwf	___aldiv@quotient+2
   578  0038  3000               	movlw	0
   579  0039  00C3               	movwf	___aldiv@quotient+1
   580  003A  3000               	movlw	0
   581  003B  00C2               	movwf	___aldiv@quotient
   582  003C  0875               	movf	___aldiv@divisor+3,w
   583  003D  0474               	iorwf	___aldiv@divisor+2,w
   584  003E  0473               	iorwf	___aldiv@divisor+1,w
   585  003F  0472               	iorwf	___aldiv@divisor,w
   586  0040  1903               	skipnz
   587  0041  2889               	goto	l685
   588  0042  01C0               	clrf	___aldiv@counter
   589  0043  0AC0               	incf	___aldiv@counter,f
   590  0044                     l671:	
   591  0044  1BF5               	btfsc	___aldiv@divisor+3,7
   592  0045  2854               	goto	l673
   593  0046  3001               	movlw	1
   594  0047  00FA               	movwf	??___aldiv
   595  0048                     u185:	
   596  0048  1003               	clrc
   597  0049  0DF2               	rlf	___aldiv@divisor,f
   598  004A  0DF3               	rlf	___aldiv@divisor+1,f
   599  004B  0DF4               	rlf	___aldiv@divisor+2,f
   600  004C  0DF5               	rlf	___aldiv@divisor+3,f
   601  004D  0BFA               	decfsz	??___aldiv,f
   602  004E  2848               	goto	u185
   603  004F  3001               	movlw	1
   604  0050  00FA               	movwf	??___aldiv
   605  0051  087A               	movf	??___aldiv,w
   606  0052  07C0               	addwf	___aldiv@counter,f
   607  0053  2844               	goto	l671
   608  0054                     l673:	
   609  0054  3001               	movlw	1
   610  0055  00FA               	movwf	??___aldiv
   611  0056                     u205:	
   612  0056  1003               	clrc
   613  0057  0DC2               	rlf	___aldiv@quotient,f
   614  0058  0DC3               	rlf	___aldiv@quotient+1,f
   615  0059  0DC4               	rlf	___aldiv@quotient+2,f
   616  005A  0DC5               	rlf	___aldiv@quotient+3,f
   617  005B  0BFA               	decfsz	??___aldiv,f
   618  005C  2856               	goto	u205
   619  005D  0875               	movf	___aldiv@divisor+3,w
   620  005E  0279               	subwf	___aldiv@dividend+3,w
   621  005F  1D03               	skipz
   622  0060  286B               	goto	u215
   623  0061  0874               	movf	___aldiv@divisor+2,w
   624  0062  0278               	subwf	___aldiv@dividend+2,w
   625  0063  1D03               	skipz
   626  0064  286B               	goto	u215
   627  0065  0873               	movf	___aldiv@divisor+1,w
   628  0066  0277               	subwf	___aldiv@dividend+1,w
   629  0067  1D03               	skipz
   630  0068  286B               	goto	u215
   631  0069  0872               	movf	___aldiv@divisor,w
   632  006A  0276               	subwf	___aldiv@dividend,w
   633  006B                     u215:	
   634  006B  1C03               	skipc
   635  006C  287C               	goto	l681
   636  006D  0872               	movf	___aldiv@divisor,w
   637  006E  02F6               	subwf	___aldiv@dividend,f
   638  006F  0873               	movf	___aldiv@divisor+1,w
   639  0070  1C03               	skipc
   640  0071  0F73               	incfsz	___aldiv@divisor+1,w
   641  0072  02F7               	subwf	___aldiv@dividend+1,f
   642  0073  0874               	movf	___aldiv@divisor+2,w
   643  0074  1C03               	skipc
   644  0075  0F74               	incfsz	___aldiv@divisor+2,w
   645  0076  02F8               	subwf	___aldiv@dividend+2,f
   646  0077  0875               	movf	___aldiv@divisor+3,w
   647  0078  1C03               	skipc
   648  0079  0F75               	incfsz	___aldiv@divisor+3,w
   649  007A  02F9               	subwf	___aldiv@dividend+3,f
   650  007B  1442               	bsf	___aldiv@quotient,0
   651  007C                     l681:	
   652  007C  3001               	movlw	1
   653  007D                     u225:	
   654  007D  1003               	clrc
   655  007E  0CF5               	rrf	___aldiv@divisor+3,f
   656  007F  0CF4               	rrf	___aldiv@divisor+2,f
   657  0080  0CF3               	rrf	___aldiv@divisor+1,f
   658  0081  0CF2               	rrf	___aldiv@divisor,f
   659  0082  3EFF               	addlw	-1
   660  0083  1D03               	skipz
   661  0084  287D               	goto	u225
   662  0085  3001               	movlw	1
   663  0086  02C0               	subwf	___aldiv@counter,f
   664  0087  1D03               	btfss	3,2
   665  0088  2854               	goto	l673
   666  0089                     l685:	
   667  0089  0841               	movf	___aldiv@sign,w
   668  008A  1903               	btfsc	3,2
   669  008B  2897               	goto	l689
   670  008C  09C2               	comf	___aldiv@quotient,f
   671  008D  09C3               	comf	___aldiv@quotient+1,f
   672  008E  09C4               	comf	___aldiv@quotient+2,f
   673  008F  09C5               	comf	___aldiv@quotient+3,f
   674  0090  0AC2               	incf	___aldiv@quotient,f
   675  0091  1903               	skipnz
   676  0092  0AC3               	incf	___aldiv@quotient+1,f
   677  0093  1903               	skipnz
   678  0094  0AC4               	incf	___aldiv@quotient+2,f
   679  0095  1903               	skipnz
   680  0096  0AC5               	incf	___aldiv@quotient+3,f
   681  0097                     l689:	
   682  0097  0845               	movf	___aldiv@quotient+3,w
   683  0098  00F5               	movwf	?___aldiv+3
   684  0099  0844               	movf	___aldiv@quotient+2,w
   685  009A  00F4               	movwf	?___aldiv+2
   686  009B  0843               	movf	___aldiv@quotient+1,w
   687  009C  00F3               	movwf	?___aldiv+1
   688  009D  0842               	movf	___aldiv@quotient,w
   689  009E  00F2               	movwf	?___aldiv
   690  009F  0008               	return
   691  00A0                     __end_of___aldiv:	
   692                           
   693                           	psect	text4
   694  00F3                     __ptext4:	
   695 ;; *************** function _init *****************
   696 ;; Defined at:
   697 ;;		line 14 in file "main.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, status,2, status,0, pclath, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0
   711 ;;      Params:         0       0
   712 ;;      Locals:         0       0
   713 ;;      Temps:          0       0
   714 ;;      Totals:         0       0
   715 ;;Total ram usage:        0 bytes
   716 ;; Hardware stack levels used:    1
   717 ;; Hardware stack levels required when called:    2
   718 ;; This function calls:
   719 ;;		_beeper_on
   720 ;;		_init_beeper
   721 ;; This function is called by:
   722 ;;		_main
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           
   727                           ;psect for function _init
   728  00F3                     _init:	
   729                           
   730                           ;main.c: 16:   OSCCON = 0b00110000;
   731                           
   732                           ;incstack = 0
   733                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   734  00F3  3030               	movlw	48
   735  00F4  1683               	bsf	3,5	;RP0=1, select bank1
   736  00F5  1303               	bcf	3,6	;RP1=0, select bank1
   737  00F6  008F               	movwf	15	;volatile
   738  00F7                     l15:	
   739                           ;main.c: 17:   while (!OSCCONbits.HTS) {}
   740                           
   741  00F7  1D0F               	btfss	15,2	;volatile
   742  00F8  28F7               	goto	l15
   743                           
   744                           ;main.c: 19:   init_beeper();
   745  00F9  20A0               	fcall	_init_beeper
   746                           
   747                           ;main.c: 20:   beeper_on();
   748  00FA  2104               	fcall	_beeper_on
   749  00FB  0008               	return
   750  00FC                     __end_of_init:	
   751                           
   752                           	psect	text5
   753  00A0                     __ptext5:	
   754 ;; *************** function _init_beeper *****************
   755 ;; Defined at:
   756 ;;		line 7 in file "beeper.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;		None
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, status,2, status,0
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMMON   BANK0
   770 ;;      Params:         0       0
   771 ;;      Locals:         0       0
   772 ;;      Temps:          1       0
   773 ;;      Totals:         1       0
   774 ;;Total ram usage:        1 bytes
   775 ;; Hardware stack levels used:    1
   776 ;; Hardware stack levels required when called:    1
   777 ;; This function calls:
   778 ;;		Nothing
   779 ;; This function is called by:
   780 ;;		_init
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           
   785                           ;psect for function _init_beeper
   786  00A0                     _init_beeper:	
   787                           
   788                           ;beeper.c: 9:   ANSELA &= ~(0b1 << 2);
   789                           
   790                           ;incstack = 0
   791                           ; Regs used in _init_beeper: [wreg+status,2+status,0]
   792  00A0  30FB               	movlw	251
   793  00A1  00F2               	movwf	??_init_beeper
   794  00A2  0872               	movf	??_init_beeper,w
   795  00A3  1683               	bsf	3,5	;RP0=1, select bank3
   796  00A4  1703               	bsf	3,6	;RP1=1, select bank3
   797  00A5  0585               	andwf	5,f	;volatile
   798                           
   799                           ;beeper.c: 10:   TRISA &= ~(0b1 << 2);
   800  00A6  30FB               	movlw	251
   801  00A7  00F2               	movwf	??_init_beeper
   802  00A8  0872               	movf	??_init_beeper,w
   803  00A9  1683               	bsf	3,5	;RP0=1, select bank1
   804  00AA  1303               	bcf	3,6	;RP1=0, select bank1
   805  00AB  0585               	andwf	5,f	;volatile
   806                           
   807                           ;beeper.c: 11:   LATA |= (0b1 << 2);
   808  00AC  1283               	bcf	3,5	;RP0=0, select bank2
   809  00AD  1703               	bsf	3,6	;RP1=1, select bank2
   810  00AE  1505               	bsf	5,2	;volatile
   811                           
   812                           ;beeper.c: 17:   T2CON = 0b00011011;
   813  00AF  301B               	movlw	27
   814  00B0  0092               	movwf	18	;volatile
   815                           
   816                           ;beeper.c: 20:   T1CON |= (0b11 << 4);
   817  00B1  3030               	movlw	48
   818  00B2  00F2               	movwf	??_init_beeper
   819  00B3  0872               	movf	??_init_beeper,w
   820  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   821  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   822  00B6  0491               	iorwf	17,f	;volatile
   823                           
   824                           ;beeper.c: 23:   INTCON |= (0b11 << 6);
   825  00B7  30C0               	movlw	192
   826  00B8  00F2               	movwf	??_init_beeper
   827  00B9  0872               	movf	??_init_beeper,w
   828  00BA  048B               	iorwf	11,f	;volatile
   829                           
   830                           ;beeper.c: 24:   PIE1 |= (0b1 << 1);
   831  00BB  1683               	bsf	3,5	;RP0=1, select bank1
   832  00BC  1303               	bcf	3,6	;RP1=0, select bank1
   833  00BD  148C               	bsf	12,1	;volatile
   834  00BE  0008               	return
   835  00BF                     __end_of_init_beeper:	
   836                           
   837                           	psect	text6
   838  0104                     __ptext6:	
   839 ;; *************** function _beeper_on *****************
   840 ;; Defined at:
   841 ;;		line 32 in file "beeper.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		None
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0
   855 ;;      Params:         0       0
   856 ;;      Locals:         0       0
   857 ;;      Temps:          0       0
   858 ;;      Totals:         0       0
   859 ;;Total ram usage:        0 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    1
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_init
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           
   870                           ;psect for function _beeper_on
   871  0104                     _beeper_on:	
   872                           
   873                           ;beeper.c: 33:   T2CONbits.TMR2ON = 1;
   874                           
   875                           ;incstack = 0
   876                           ; Regs used in _beeper_on: []
   877  0104  1283               	bcf	3,5	;RP0=0, select bank2
   878  0105  1703               	bsf	3,6	;RP1=1, select bank2
   879  0106  1512               	bsf	18,2	;volatile
   880  0107  0008               	return
   881  0108                     __end_of_beeper_on:	
   882                           
   883                           	psect	text7
   884  00D9                     __ptext7:	
   885 ;; *************** function _ISR *****************
   886 ;; Defined at:
   887 ;;		line 40 in file "beeper.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		status,0
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0
   901 ;;      Params:         0       0
   902 ;;      Locals:         0       0
   903 ;;      Temps:          2       0
   904 ;;      Totals:         2       0
   905 ;;Total ram usage:        2 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		Interrupt level 1
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           
   915                           ;psect for function _ISR
   916  00D9                     _ISR:	
   917                           
   918                           ;beeper.c: 41:   if (PIR1bits.TMR2IF) {
   919  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   920  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   921  00DB  1C8C               	btfss	12,1	;volatile
   922  00DC  28EC               	goto	i1l69
   923                           
   924                           ;beeper.c: 43:     PIR1bits.TMR2IF = 0;
   925  00DD  108C               	bcf	12,1	;volatile
   926                           
   927                           ;beeper.c: 44:     LATAbits.LATA2 = ~LATAbits.LATA2;
   928  00DE  1003               	clrc
   929  00DF  1283               	bcf	3,5	;RP0=0, select bank2
   930  00E0  1703               	bsf	3,6	;RP1=1, select bank2
   931  00E1  1D05               	btfss	5,2	;volatile
   932  00E2  1403               	setc
   933  00E3  1C03               	btfss	3,0
   934  00E4  28E9               	goto	u13_20
   935  00E5  1283               	bcf	3,5	;RP0=0, select bank2
   936  00E6  1703               	bsf	3,6	;RP1=1, select bank2
   937  00E7  1505               	bsf	5,2	;volatile
   938  00E8  28EC               	goto	i1l69
   939  00E9                     u13_20:	
   940  00E9  1283               	bcf	3,5	;RP0=0, select bank2
   941  00EA  1703               	bsf	3,6	;RP1=1, select bank2
   942  00EB  1105               	bcf	5,2	;volatile
   943  00EC                     i1l69:	
   944  00EC  0871               	movf	??_ISR+1,w
   945  00ED  008A               	movwf	10
   946  00EE  0E70               	swapf	??_ISR^(0+4294967168),w
   947  00EF  0083               	movwf	3
   948  00F0  0EFE               	swapf	126,f
   949  00F1  0E7E               	swapf	126,w
   950  00F2  0009               	retfie
   951  00F3                     __end_of_ISR:	
   952  007E                     btemp	set	126	;btemp
   953  007E                     wtemp0	set	126
   954                           
   955                           	psect	intentry
   956  0004                     __pintentry:	
   957                           ;incstack = 0
   958                           ; Regs used in _ISR: [status,0]
   959                           
   960  0004                     interrupt_function:	
   961  007E                     saved_w	set	btemp
   962  0004  00FE               	movwf	btemp
   963  0005  0E03               	swapf	3,w
   964  0006  00F0               	movwf	??_ISR
   965  0007  080A               	movf	10,w
   966  0008  00F1               	movwf	??_ISR+1
   967  0009  28D9               	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            48      8      10

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _beeper_set_freq_hz->___aldiv
    _init->_init_beeper

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _loop->_beeper_set_freq_hz
    _beeper_set_freq_hz->___aldiv

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     550
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0     550
                 _beeper_set_freq_hz
 ---------------------------------------------------------------------------------
 (2) _beeper_set_freq_hz                                   2     0      2     550
                                              6 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     452
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                          _beeper_on
                        _init_beeper
 ---------------------------------------------------------------------------------
 (2) _init_beeper                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _beeper_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _beeper_on
     _init_beeper
   _loop
     _beeper_set_freq_hz
       ___aldiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               30      8       A       6       20.8%
BITBANK0            30      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      15       4        0.0%
ABS                  0      0      15       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat May 04 02:35:28 2019

                         l15 00F7                           l26 0109                          l138 0023  
                        l671 0044                          l663 0034                          l681 007C  
                        l673 0054                          l685 0089                          l689 0097  
                        u205 0056                          u215 006B                          u225 007D  
                        _PR2 0111                          u185 0048                          _ISR 00D9  
                       ?_ISR 0070                         _LATA 0105                         _PIE1 008C  
                       i1l69 00EC                         _main 0108                         _freq 0048  
                       _init 00F3                         _loop 00FC                         btemp 007E  
                       start 000A                        ??_ISR 0070              __end_of___aldiv 00A0  
                      ?_main 0070                        ?_init 0070                 ?_init_beeper 0070  
                      ?_loop 0070                        _T1CON 0011                        _T2CON 0112  
                      u13_20 00E9                        _TRISA 0085                        pclath 000A  
                      status 0003                        wtemp0 007E              __initialization 000B  
               __end_of_main 010B                 __end_of_init 00FC                 __end_of_loop 0104  
                     ??_main 007B                       ??_init 0073                       ??_loop 007B  
                     _ANSELA 0185                       _INTCON 000B                       _OSCCON 008F  
__size_of_beeper_set_freq_hz 001A                    ??___aldiv 007A                       saved_w 007E  
     beeper_set_freq_hz@freq 0046      __end_of__initialization 000F               __pcstackCOMMON 0070  
               __pidataBANK0 010B           __size_of_beeper_on 0004         __size_of_init_beeper 001F  
                 __pmaintext 0108                   __pintentry 0004            __end_of_beeper_on 0108  
                    ___aldiv 0011                      __ptext1 00FC                      __ptext2 00BF  
                    __ptext3 0011                      __ptext4 00F3                      __ptext5 00A0  
                    __ptext6 0104                      __ptext7 00D9                 __size_of_ISR 001A  
                  _T2CONbits 0112             ___aldiv@dividend 0076         end_of_initialization 000F  
           ___aldiv@quotient 0042   __end_of_beeper_set_freq_hz 00D9          start_initialization 000B  
                __end_of_ISR 00F3                  __pdataBANK0 0048                ??_init_beeper 0072  
                  ___latbits 0000                __pcstackBANK0 0040                    _beeper_on 0104  
                   ?___aldiv 0072          __end_of_init_beeper 00BF              ___aldiv@divisor 0072  
          interrupt_function 0004              ___aldiv@counter 0040                   ?_beeper_on 0070  
                   _LATAbits 0105                     _PIR1bits 000C             __size_of___aldiv 008F  
         _beeper_set_freq_hz 00BF                  _init_beeper 00A0          ?_beeper_set_freq_hz 0046  
                ??_beeper_on 0072                __size_of_main 0003                __size_of_init 0009  
              __size_of_loop 0008         ??_beeper_set_freq_hz 007B                     intlevel1 0000  
                 _OSCCONbits 008F                 ___aldiv@sign 0041  
